---
# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
- name: Install packages 
  apt:
    pkg:
    - curl
    - apt-transport-https
    - ca-certificates
    - gpg

- name: Disable swap for kubelet
  command: swapoff -a

# DOCKER STUFF
- name: Update apt package index
  apt:
    update_cache: yes

- name: Install packages to allow apt to use a repository over HTTPS
  apt:
    name: 
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present

- name: Add Dockerâ€™s official GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker APT repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present

- name: Update apt package index after adding Docker repo
  apt:
    update_cache: yes

- name: Install Docker Engine, CLI, and Containerd
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present

- name: Create /etc/docker directory
  file:
    path: /etc/docker
    state: directory

- name: Configure Docker daemon
  copy:
    content: |
      {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "100m"
        },
        "storage-driver": "overlay2"
      }
    dest: /etc/docker/daemon.json

- name: Create docker service directory
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory

- name: Restart Docker
  systemd:
    name: docker
    enabled: yes
    daemon_reload: yes
    state: restarted

- name: Add user to the docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

- name: Enable Docker service
  systemd:
    name: docker
    enabled: yes

# END OF DOCKER STUFF




- name: Download Kubernetes signing key
  shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

# Shell allows for pipes. Not best practice, but should work temporarily
- name: Add kuberenetes apt repository
  shell: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list


- name: Update, Upgrade apt
  apt:
    update_cache: yes
    upgrade: dist

- name: Install kubelet, kubeadmin, kubecontroller
  apt:
    pkg:
    - kubelet
    - kubeadm
    - kubectl

- name: Enable and start kubelet service
  systemd:
    name: kubelet
    enabled: yes
    state: started

- name: Download and install k3d
  shell: curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash

# -f allows it to run even when reprovisioning. Else it stops as it cannot find the file. Gotta be a better way surely
- name: Remove misconfigured containerd file
  shell: rm -f /etc/containerd/config.toml

- name: Restart containerd
  shell: systemctl restart containerd
# sudo rm /etc/containerd/config.toml
# sudo systemctl restart containerd
# sudo kubeadm init 
